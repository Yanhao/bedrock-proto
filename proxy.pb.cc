// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy.proto

#include "proxy.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace bedrock {
namespace proxy {
constexpr BedRockKvGetRequest::BedRockKvGetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BedRockKvGetRequestDefaultTypeInternal {
  constexpr BedRockKvGetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BedRockKvGetRequestDefaultTypeInternal() {}
  union {
    BedRockKvGetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BedRockKvGetRequestDefaultTypeInternal _BedRockKvGetRequest_default_instance_;
constexpr BedRockKvGetResponse::BedRockKvGetResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , err_(0)
{}
struct BedRockKvGetResponseDefaultTypeInternal {
  constexpr BedRockKvGetResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BedRockKvGetResponseDefaultTypeInternal() {}
  union {
    BedRockKvGetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BedRockKvGetResponseDefaultTypeInternal _BedRockKvGetResponse_default_instance_;
constexpr BedRockKvSetRequest::BedRockKvSetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BedRockKvSetRequestDefaultTypeInternal {
  constexpr BedRockKvSetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BedRockKvSetRequestDefaultTypeInternal() {}
  union {
    BedRockKvSetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BedRockKvSetRequestDefaultTypeInternal _BedRockKvSetRequest_default_instance_;
constexpr BedRockKvSetResponse::BedRockKvSetResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : err_(0)
{}
struct BedRockKvSetResponseDefaultTypeInternal {
  constexpr BedRockKvSetResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BedRockKvSetResponseDefaultTypeInternal() {}
  union {
    BedRockKvSetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BedRockKvSetResponseDefaultTypeInternal _BedRockKvSetResponse_default_instance_;
constexpr BedRockKvDeleteRequest::BedRockKvDeleteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BedRockKvDeleteRequestDefaultTypeInternal {
  constexpr BedRockKvDeleteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BedRockKvDeleteRequestDefaultTypeInternal() {}
  union {
    BedRockKvDeleteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BedRockKvDeleteRequestDefaultTypeInternal _BedRockKvDeleteRequest_default_instance_;
constexpr BedRockKvDeleteResponse::BedRockKvDeleteResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : err_(0)
{}
struct BedRockKvDeleteResponseDefaultTypeInternal {
  constexpr BedRockKvDeleteResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BedRockKvDeleteResponseDefaultTypeInternal() {}
  union {
    BedRockKvDeleteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BedRockKvDeleteResponseDefaultTypeInternal _BedRockKvDeleteResponse_default_instance_;
}  // namespace proxy
}  // namespace bedrock
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proxy_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_proxy_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_proxy_2eproto[1];

const uint32_t TableStruct_proxy_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvGetRequest, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvGetResponse, value_),
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvGetResponse, err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvSetRequest, key_),
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvSetRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvSetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvSetResponse, err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvDeleteRequest, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bedrock::proxy::BedRockKvDeleteResponse, err_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::bedrock::proxy::BedRockKvGetRequest)},
  { 7, -1, -1, sizeof(::bedrock::proxy::BedRockKvGetResponse)},
  { 15, -1, -1, sizeof(::bedrock::proxy::BedRockKvSetRequest)},
  { 23, -1, -1, sizeof(::bedrock::proxy::BedRockKvSetResponse)},
  { 30, -1, -1, sizeof(::bedrock::proxy::BedRockKvDeleteRequest)},
  { 37, -1, -1, sizeof(::bedrock::proxy::BedRockKvDeleteResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bedrock::proxy::_BedRockKvGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bedrock::proxy::_BedRockKvGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bedrock::proxy::_BedRockKvSetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bedrock::proxy::_BedRockKvSetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bedrock::proxy::_BedRockKvDeleteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bedrock::proxy::_BedRockKvDeleteResponse_default_instance_),
};

const char descriptor_table_protodef_proxy_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013proxy.proto\022\rbedrock.proxy\"\"\n\023BedRockK"
  "vGetRequest\022\013\n\003key\030\001 \001(\014\"I\n\024BedRockKvGet"
  "Response\022\r\n\005value\030\001 \001(\014\022\"\n\003err\030\377\001 \001(\0162\024."
  "bedrock.proxy.Error\"1\n\023BedRockKvSetReque"
  "st\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\":\n\024BedRoc"
  "kKvSetResponse\022\"\n\003err\030\377\001 \001(\0162\024.bedrock.p"
  "roxy.Error\"%\n\026BedRockKvDeleteRequest\022\013\n\003"
  "key\030\001 \001(\014\"=\n\027BedRockKvDeleteResponse\022\"\n\003"
  "err\030\377\001 \001(\0162\024.bedrock.proxy.Error*F\n\005Erro"
  "r\022\006\n\002OK\020\000\022\017\n\013NO_SUCH_KEY\020\001\022\026\n\022INVLIAD_PA"
  "RAMETERS\020\002\022\014\n\007UNKNOWN\020\377\0012\240\002\n\014ProxyServic"
  "e\022V\n\014BedRockKvSet\022\".bedrock.proxy.BedRoc"
  "kKvSetRequest\032\".bedrock.proxy.BedRockKvS"
  "etRequest\022V\n\014BedRockKvGet\022\".bedrock.prox"
  "y.BedRockKvGetRequest\032\".bedrock.proxy.Be"
  "dRockKvGetRequest\022`\n\017BedRockKvDelete\022%.b"
  "edrock.proxy.BedRockKvDeleteRequest\032&.be"
  "drock.proxy.BedRockKvDeleteResponseB\003\200\001\001"
  "b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proxy_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proxy_2eproto = {
  false, false, 728, descriptor_table_protodef_proxy_2eproto, "proxy.proto", 
  &descriptor_table_proxy_2eproto_once, nullptr, 0, 6,
  schemas, file_default_instances, TableStruct_proxy_2eproto::offsets,
  file_level_metadata_proxy_2eproto, file_level_enum_descriptors_proxy_2eproto, file_level_service_descriptors_proxy_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_proxy_2eproto_getter() {
  return &descriptor_table_proxy_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_proxy_2eproto(&descriptor_table_proxy_2eproto);
namespace bedrock {
namespace proxy {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Error_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proxy_2eproto);
  return file_level_enum_descriptors_proxy_2eproto[0];
}
bool Error_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 255:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class BedRockKvGetRequest::_Internal {
 public:
};

BedRockKvGetRequest::BedRockKvGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bedrock.proxy.BedRockKvGetRequest)
}
BedRockKvGetRequest::BedRockKvGetRequest(const BedRockKvGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:bedrock.proxy.BedRockKvGetRequest)
}

inline void BedRockKvGetRequest::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BedRockKvGetRequest::~BedRockKvGetRequest() {
  // @@protoc_insertion_point(destructor:bedrock.proxy.BedRockKvGetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BedRockKvGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BedRockKvGetRequest::ArenaDtor(void* object) {
  BedRockKvGetRequest* _this = reinterpret_cast< BedRockKvGetRequest* >(object);
  (void)_this;
}
void BedRockKvGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BedRockKvGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BedRockKvGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bedrock.proxy.BedRockKvGetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BedRockKvGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BedRockKvGetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bedrock.proxy.BedRockKvGetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (!this->_internal_key().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bedrock.proxy.BedRockKvGetRequest)
  return target;
}

size_t BedRockKvGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bedrock.proxy.BedRockKvGetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BedRockKvGetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BedRockKvGetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BedRockKvGetRequest::GetClassData() const { return &_class_data_; }

void BedRockKvGetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BedRockKvGetRequest *>(to)->MergeFrom(
      static_cast<const BedRockKvGetRequest &>(from));
}


void BedRockKvGetRequest::MergeFrom(const BedRockKvGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bedrock.proxy.BedRockKvGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BedRockKvGetRequest::CopyFrom(const BedRockKvGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bedrock.proxy.BedRockKvGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BedRockKvGetRequest::IsInitialized() const {
  return true;
}

void BedRockKvGetRequest::InternalSwap(BedRockKvGetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BedRockKvGetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_proxy_2eproto_getter, &descriptor_table_proxy_2eproto_once,
      file_level_metadata_proxy_2eproto[0]);
}

// ===================================================================

class BedRockKvGetResponse::_Internal {
 public:
};

BedRockKvGetResponse::BedRockKvGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bedrock.proxy.BedRockKvGetResponse)
}
BedRockKvGetResponse::BedRockKvGetResponse(const BedRockKvGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArenaForAllocation());
  }
  err_ = from.err_;
  // @@protoc_insertion_point(copy_constructor:bedrock.proxy.BedRockKvGetResponse)
}

inline void BedRockKvGetResponse::SharedCtor() {
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
err_ = 0;
}

BedRockKvGetResponse::~BedRockKvGetResponse() {
  // @@protoc_insertion_point(destructor:bedrock.proxy.BedRockKvGetResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BedRockKvGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BedRockKvGetResponse::ArenaDtor(void* object) {
  BedRockKvGetResponse* _this = reinterpret_cast< BedRockKvGetResponse* >(object);
  (void)_this;
}
void BedRockKvGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BedRockKvGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BedRockKvGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bedrock.proxy.BedRockKvGetResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty();
  err_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BedRockKvGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .bedrock.proxy.Error err = 255;
      case 255:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_err(static_cast<::bedrock::proxy::Error>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BedRockKvGetResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bedrock.proxy.BedRockKvGetResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (!this->_internal_value().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_value(), target);
  }

  // .bedrock.proxy.Error err = 255;
  if (this->_internal_err() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      255, this->_internal_err(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bedrock.proxy.BedRockKvGetResponse)
  return target;
}

size_t BedRockKvGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bedrock.proxy.BedRockKvGetResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 1;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  // .bedrock.proxy.Error err = 255;
  if (this->_internal_err() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_err());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BedRockKvGetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BedRockKvGetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BedRockKvGetResponse::GetClassData() const { return &_class_data_; }

void BedRockKvGetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BedRockKvGetResponse *>(to)->MergeFrom(
      static_cast<const BedRockKvGetResponse &>(from));
}


void BedRockKvGetResponse::MergeFrom(const BedRockKvGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bedrock.proxy.BedRockKvGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_err() != 0) {
    _internal_set_err(from._internal_err());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BedRockKvGetResponse::CopyFrom(const BedRockKvGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bedrock.proxy.BedRockKvGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BedRockKvGetResponse::IsInitialized() const {
  return true;
}

void BedRockKvGetResponse::InternalSwap(BedRockKvGetResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
  swap(err_, other->err_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BedRockKvGetResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_proxy_2eproto_getter, &descriptor_table_proxy_2eproto_once,
      file_level_metadata_proxy_2eproto[1]);
}

// ===================================================================

class BedRockKvSetRequest::_Internal {
 public:
};

BedRockKvSetRequest::BedRockKvSetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bedrock.proxy.BedRockKvSetRequest)
}
BedRockKvSetRequest::BedRockKvSetRequest(const BedRockKvSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:bedrock.proxy.BedRockKvSetRequest)
}

inline void BedRockKvSetRequest::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BedRockKvSetRequest::~BedRockKvSetRequest() {
  // @@protoc_insertion_point(destructor:bedrock.proxy.BedRockKvSetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BedRockKvSetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BedRockKvSetRequest::ArenaDtor(void* object) {
  BedRockKvSetRequest* _this = reinterpret_cast< BedRockKvSetRequest* >(object);
  (void)_this;
}
void BedRockKvSetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BedRockKvSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BedRockKvSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bedrock.proxy.BedRockKvSetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BedRockKvSetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BedRockKvSetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bedrock.proxy.BedRockKvSetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (!this->_internal_key().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_key(), target);
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bedrock.proxy.BedRockKvSetRequest)
  return target;
}

size_t BedRockKvSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bedrock.proxy.BedRockKvSetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BedRockKvSetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BedRockKvSetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BedRockKvSetRequest::GetClassData() const { return &_class_data_; }

void BedRockKvSetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BedRockKvSetRequest *>(to)->MergeFrom(
      static_cast<const BedRockKvSetRequest &>(from));
}


void BedRockKvSetRequest::MergeFrom(const BedRockKvSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bedrock.proxy.BedRockKvSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BedRockKvSetRequest::CopyFrom(const BedRockKvSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bedrock.proxy.BedRockKvSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BedRockKvSetRequest::IsInitialized() const {
  return true;
}

void BedRockKvSetRequest::InternalSwap(BedRockKvSetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BedRockKvSetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_proxy_2eproto_getter, &descriptor_table_proxy_2eproto_once,
      file_level_metadata_proxy_2eproto[2]);
}

// ===================================================================

class BedRockKvSetResponse::_Internal {
 public:
};

BedRockKvSetResponse::BedRockKvSetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bedrock.proxy.BedRockKvSetResponse)
}
BedRockKvSetResponse::BedRockKvSetResponse(const BedRockKvSetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_ = from.err_;
  // @@protoc_insertion_point(copy_constructor:bedrock.proxy.BedRockKvSetResponse)
}

inline void BedRockKvSetResponse::SharedCtor() {
err_ = 0;
}

BedRockKvSetResponse::~BedRockKvSetResponse() {
  // @@protoc_insertion_point(destructor:bedrock.proxy.BedRockKvSetResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BedRockKvSetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BedRockKvSetResponse::ArenaDtor(void* object) {
  BedRockKvSetResponse* _this = reinterpret_cast< BedRockKvSetResponse* >(object);
  (void)_this;
}
void BedRockKvSetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BedRockKvSetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BedRockKvSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bedrock.proxy.BedRockKvSetResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BedRockKvSetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .bedrock.proxy.Error err = 255;
      case 255:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_err(static_cast<::bedrock::proxy::Error>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BedRockKvSetResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bedrock.proxy.BedRockKvSetResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .bedrock.proxy.Error err = 255;
  if (this->_internal_err() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      255, this->_internal_err(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bedrock.proxy.BedRockKvSetResponse)
  return target;
}

size_t BedRockKvSetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bedrock.proxy.BedRockKvSetResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bedrock.proxy.Error err = 255;
  if (this->_internal_err() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_err());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BedRockKvSetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BedRockKvSetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BedRockKvSetResponse::GetClassData() const { return &_class_data_; }

void BedRockKvSetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BedRockKvSetResponse *>(to)->MergeFrom(
      static_cast<const BedRockKvSetResponse &>(from));
}


void BedRockKvSetResponse::MergeFrom(const BedRockKvSetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bedrock.proxy.BedRockKvSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_err() != 0) {
    _internal_set_err(from._internal_err());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BedRockKvSetResponse::CopyFrom(const BedRockKvSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bedrock.proxy.BedRockKvSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BedRockKvSetResponse::IsInitialized() const {
  return true;
}

void BedRockKvSetResponse::InternalSwap(BedRockKvSetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(err_, other->err_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BedRockKvSetResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_proxy_2eproto_getter, &descriptor_table_proxy_2eproto_once,
      file_level_metadata_proxy_2eproto[3]);
}

// ===================================================================

class BedRockKvDeleteRequest::_Internal {
 public:
};

BedRockKvDeleteRequest::BedRockKvDeleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bedrock.proxy.BedRockKvDeleteRequest)
}
BedRockKvDeleteRequest::BedRockKvDeleteRequest(const BedRockKvDeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:bedrock.proxy.BedRockKvDeleteRequest)
}

inline void BedRockKvDeleteRequest::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BedRockKvDeleteRequest::~BedRockKvDeleteRequest() {
  // @@protoc_insertion_point(destructor:bedrock.proxy.BedRockKvDeleteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BedRockKvDeleteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BedRockKvDeleteRequest::ArenaDtor(void* object) {
  BedRockKvDeleteRequest* _this = reinterpret_cast< BedRockKvDeleteRequest* >(object);
  (void)_this;
}
void BedRockKvDeleteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BedRockKvDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BedRockKvDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bedrock.proxy.BedRockKvDeleteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BedRockKvDeleteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BedRockKvDeleteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bedrock.proxy.BedRockKvDeleteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (!this->_internal_key().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bedrock.proxy.BedRockKvDeleteRequest)
  return target;
}

size_t BedRockKvDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bedrock.proxy.BedRockKvDeleteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BedRockKvDeleteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BedRockKvDeleteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BedRockKvDeleteRequest::GetClassData() const { return &_class_data_; }

void BedRockKvDeleteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BedRockKvDeleteRequest *>(to)->MergeFrom(
      static_cast<const BedRockKvDeleteRequest &>(from));
}


void BedRockKvDeleteRequest::MergeFrom(const BedRockKvDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bedrock.proxy.BedRockKvDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BedRockKvDeleteRequest::CopyFrom(const BedRockKvDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bedrock.proxy.BedRockKvDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BedRockKvDeleteRequest::IsInitialized() const {
  return true;
}

void BedRockKvDeleteRequest::InternalSwap(BedRockKvDeleteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BedRockKvDeleteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_proxy_2eproto_getter, &descriptor_table_proxy_2eproto_once,
      file_level_metadata_proxy_2eproto[4]);
}

// ===================================================================

class BedRockKvDeleteResponse::_Internal {
 public:
};

BedRockKvDeleteResponse::BedRockKvDeleteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bedrock.proxy.BedRockKvDeleteResponse)
}
BedRockKvDeleteResponse::BedRockKvDeleteResponse(const BedRockKvDeleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_ = from.err_;
  // @@protoc_insertion_point(copy_constructor:bedrock.proxy.BedRockKvDeleteResponse)
}

inline void BedRockKvDeleteResponse::SharedCtor() {
err_ = 0;
}

BedRockKvDeleteResponse::~BedRockKvDeleteResponse() {
  // @@protoc_insertion_point(destructor:bedrock.proxy.BedRockKvDeleteResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BedRockKvDeleteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BedRockKvDeleteResponse::ArenaDtor(void* object) {
  BedRockKvDeleteResponse* _this = reinterpret_cast< BedRockKvDeleteResponse* >(object);
  (void)_this;
}
void BedRockKvDeleteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BedRockKvDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BedRockKvDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bedrock.proxy.BedRockKvDeleteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BedRockKvDeleteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .bedrock.proxy.Error err = 255;
      case 255:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_err(static_cast<::bedrock::proxy::Error>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BedRockKvDeleteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bedrock.proxy.BedRockKvDeleteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .bedrock.proxy.Error err = 255;
  if (this->_internal_err() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      255, this->_internal_err(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bedrock.proxy.BedRockKvDeleteResponse)
  return target;
}

size_t BedRockKvDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bedrock.proxy.BedRockKvDeleteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bedrock.proxy.Error err = 255;
  if (this->_internal_err() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_err());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BedRockKvDeleteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BedRockKvDeleteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BedRockKvDeleteResponse::GetClassData() const { return &_class_data_; }

void BedRockKvDeleteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BedRockKvDeleteResponse *>(to)->MergeFrom(
      static_cast<const BedRockKvDeleteResponse &>(from));
}


void BedRockKvDeleteResponse::MergeFrom(const BedRockKvDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bedrock.proxy.BedRockKvDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_err() != 0) {
    _internal_set_err(from._internal_err());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BedRockKvDeleteResponse::CopyFrom(const BedRockKvDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bedrock.proxy.BedRockKvDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BedRockKvDeleteResponse::IsInitialized() const {
  return true;
}

void BedRockKvDeleteResponse::InternalSwap(BedRockKvDeleteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(err_, other->err_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BedRockKvDeleteResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_proxy_2eproto_getter, &descriptor_table_proxy_2eproto_once,
      file_level_metadata_proxy_2eproto[5]);
}

// ===================================================================

ProxyService::~ProxyService() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* ProxyService::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proxy_2eproto);
  return file_level_service_descriptors_proxy_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* ProxyService::GetDescriptor() {
  return descriptor();
}

void ProxyService::BedRockKvSet(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::bedrock::proxy::BedRockKvSetRequest*,
                         ::bedrock::proxy::BedRockKvSetRequest*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method BedRockKvSet() not implemented.");
  done->Run();
}

void ProxyService::BedRockKvGet(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::bedrock::proxy::BedRockKvGetRequest*,
                         ::bedrock::proxy::BedRockKvGetRequest*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method BedRockKvGet() not implemented.");
  done->Run();
}

void ProxyService::BedRockKvDelete(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::bedrock::proxy::BedRockKvDeleteRequest*,
                         ::bedrock::proxy::BedRockKvDeleteResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method BedRockKvDelete() not implemented.");
  done->Run();
}

void ProxyService::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_proxy_2eproto[0]);
  switch(method->index()) {
    case 0:
      BedRockKvSet(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::bedrock::proxy::BedRockKvSetRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::bedrock::proxy::BedRockKvSetRequest*>(
                 response),
             done);
      break;
    case 1:
      BedRockKvGet(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::bedrock::proxy::BedRockKvGetRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::bedrock::proxy::BedRockKvGetRequest*>(
                 response),
             done);
      break;
    case 2:
      BedRockKvDelete(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::bedrock::proxy::BedRockKvDeleteRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::bedrock::proxy::BedRockKvDeleteResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& ProxyService::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::bedrock::proxy::BedRockKvSetRequest::default_instance();
    case 1:
      return ::bedrock::proxy::BedRockKvGetRequest::default_instance();
    case 2:
      return ::bedrock::proxy::BedRockKvDeleteRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& ProxyService::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::bedrock::proxy::BedRockKvSetRequest::default_instance();
    case 1:
      return ::bedrock::proxy::BedRockKvGetRequest::default_instance();
    case 2:
      return ::bedrock::proxy::BedRockKvDeleteResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ProxyService_Stub::ProxyService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ProxyService_Stub::ProxyService_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
ProxyService_Stub::~ProxyService_Stub() {
  if (owns_channel_) delete channel_;
}

void ProxyService_Stub::BedRockKvSet(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::bedrock::proxy::BedRockKvSetRequest* request,
                              ::bedrock::proxy::BedRockKvSetRequest* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void ProxyService_Stub::BedRockKvGet(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::bedrock::proxy::BedRockKvGetRequest* request,
                              ::bedrock::proxy::BedRockKvGetRequest* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void ProxyService_Stub::BedRockKvDelete(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::bedrock::proxy::BedRockKvDeleteRequest* request,
                              ::bedrock::proxy::BedRockKvDeleteResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proxy
}  // namespace bedrock
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bedrock::proxy::BedRockKvGetRequest* Arena::CreateMaybeMessage< ::bedrock::proxy::BedRockKvGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bedrock::proxy::BedRockKvGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bedrock::proxy::BedRockKvGetResponse* Arena::CreateMaybeMessage< ::bedrock::proxy::BedRockKvGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bedrock::proxy::BedRockKvGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bedrock::proxy::BedRockKvSetRequest* Arena::CreateMaybeMessage< ::bedrock::proxy::BedRockKvSetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bedrock::proxy::BedRockKvSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bedrock::proxy::BedRockKvSetResponse* Arena::CreateMaybeMessage< ::bedrock::proxy::BedRockKvSetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bedrock::proxy::BedRockKvSetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bedrock::proxy::BedRockKvDeleteRequest* Arena::CreateMaybeMessage< ::bedrock::proxy::BedRockKvDeleteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bedrock::proxy::BedRockKvDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bedrock::proxy::BedRockKvDeleteResponse* Arena::CreateMaybeMessage< ::bedrock::proxy::BedRockKvDeleteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bedrock::proxy::BedRockKvDeleteResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
