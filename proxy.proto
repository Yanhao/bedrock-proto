syntax = "proto3";

package bedrock.proxy;
option cc_generic_services = true;

enum Error {
    OK = 0;
    NO_SUCH_KEY = 1;
    INVLIAD_PARAMETERS = 2;

    UNKNOWN = 255;
}

message BedRockKvGetRequest {
    uint32 storage_id = 1;
    bytes key = 2;
}

message BedRockKvGetResponse {
    bytes value = 1;

    Error err = 255;
}

message BedRockKvSetRequest {
    uint32 storage_id = 1;
    bytes key = 2;
    bytes value = 3;
}

message BedRockKvSetResponse {
    Error err = 255;
}

message BedRockKvDeleteRequest {
    uint32 storage_id = 1;
    bytes key = 2;
}

message BedRockKvDeleteResponse {
    Error err = 255;
}

message BedRockKvMSetParam {
    bytes key = 1;
    bytes value = 2;
}

message BedRockKvMSetRequest {
    uint32 storage_id = 1;
    repeated BedRockKvMSetParam params = 2;
}

message BedRockKvMSetResponse {
    Error err = 255;
}

message BedRockKvMGetParam {
    bytes key = 1;
}

message BedRockKvMGetRequest {
    uint32 storage_id = 1;
    repeated BedRockKvMGetParam params = 2;
}

message BedRockKvMGetKvRetPair {
    bytes key = 1;
    bytes value = 2;
}

message BedRockKvMGetResponse {
    repeated BedRockKvMGetKvRetPair kvs = 1;

    Error err = 255;
}

message BedRockKvMDeleteParam {
    bytes key = 1;
}

message BedRockKvMDeleteRequest {
    uint32 storage_id = 1;
    repeated BedRockKvMDeleteParam params = 2;
}

message BedRockKvMDeleteResponse {
    Error err = 255;
}

message BedRockStartScanRequest {
    uint32 storage_id = 1;
    bytes start_key = 2;
    bytes end_key = 3;
    int32 limit = 4;
}

message BedRockStartScanResponse {
    uint64 iterator_id = 1;

    Error err = 255;
}

message BedRockStopScanRequest {
    uint64 iterator_id = 1;
}

message BedRockStopScanResponse{
    Error err = 255;
}

message BedRockDoScanRequest {
    uint64 iterator_id = 1;
}

message BedRockKvPair {
    bytes key = 1;
    bytes value = 2;
}

message BedRockDoScanResponse {
    repeated BedRockKvPair kvs = 1;
    bool no_left = 2;

    Error err = 255;
}

enum BedRockTxLockType {
    SHARED = 0;
    EXCLUSIVE = 1;
}

message BedRockTxRecordLock {
    BedRockTxLockType lock_type = 1;
    bytes key = 2;
}

message BedRockTxRangeLock {
    BedRockTxLockType lock_type = 1;
    bytes start_key = 2;
    bytes end_key = 3;
}

message BedRockStartTxRequest {
    uint32 storage_id = 1;
    repeated BedRockTxRecordLock record_locks = 2;
    repeated BedRockTxRangeLock range_locks = 3;
}

message BedRockStartTxResponse {
    uint64 tx_id = 1;

    Error err = 255;
}

message BedRockCommitTxRequest {
    uint32 storage_id = 1;
    uint64 tx_id = 2;
}

message BedRockCommitTxResponse {
    Error err = 255;
}

message BedRockRollbackTxRequest {
    uint32 storage_id = 1;
    uint64 tx_id = 2;
}

message BedRockRollbackTxResponse {
    Error err = 255;
}

service ProxyService {
    rpc BedRockKvSet(BedRockKvSetRequest) returns (BedRockKvSetResponse);
    rpc BedRockKvGet(BedRockKvGetRequest) returns (BedRockKvGetResponse);
    rpc BedRockKvDelete(BedRockKvDeleteRequest) returns (BedRockKvDeleteResponse);

    rpc BedRockKvMSet(BedRockKvMSetRequest) returns (BedRockKvMSetResponse);
    rpc BedRockKvMGet(BedRockKvMGetRequest) returns (BedRockKvMGetResponse);
    rpc BedRockKvMDelete(BedRockKvMDeleteRequest) returns (BedRockKvMDeleteResponse);

    rpc BedRockStartScan(BedRockStartScanRequest) returns (BedRockStartScanResponse);
    rpc BedRockStopScan(BedRockStopScanRequest) returns (BedRockStopScanResponse);
    rpc BedRockDoScan(BedRockDoScanRequest) returns (BedRockDoScanResponse);

    rpc BedRockStartTx(BedRockStartTxRequest) returns (BedRockStartTxResponse);
    rpc BedRockCommitTx(BedRockCommitTxRequest) returns (BedRockCommitTxResponse);
    rpc BedRockRollbackTx(BedRockRollbackTxRequest) returns (BedRockRollbackTxResponse);
}
